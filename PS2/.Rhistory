ate_hat = coef(reg_q2)["D"]
var_hat = se(reg_q2)["D"]^2
# if (ate == coef(reg_q2)) {
#  print(TRUE)
# } else {
#   print(FALSE)
# }
# if (var == var(coefficients)) {
#   print(TRUE)
# } else {
#   print(FALSE)
# }
ci_lower = ate_hat - 1.96 * sqrt(var_hat)
ci_upper = ate_hat + 1.96 * sqrt(var_hat)
indicator = as.numeric(ate >= ci_lower & ate <= ci_upper)
results[i, ] = c(ate_hat, var_hat, indicator)
}
mean_ate_hat = mean(results$ATE)
result_ate <- glue("The mean of the estimates is {mean_ate_hat}, the true value is {ate}.")
print(result_ate)
var_ate_hat <- var(results$ATE)
mean_var_hat <- mean(var_ate_hat)
result_var <- glue("The mean of the variace is {mean_var_hat}, the true value is {var}.")
print(result_var)
coverage_probability = mean(results$Confidence_Inclusion)
print(coverage_probability)
results_2 = data.frame(
ATE = numeric(iterations),
Variance = numeric(iterations),
Confidence_Inclusion = integer(iterations)
)
iterations = 800
for (i in 1:iterations) {
random_sort_2 = runif(n)
sim_data_sorted_2 = sim_data %>%
mutate(random_sort_2)
sim_data_sorted_2 = sim_data_sorted_2 %>%
arrange(random_sort_2)
sim_data_sorted_2 = sim_data_sorted_2 %>%
mutate(D_2 = ifelse(row_number() <= 500, 1, 0)) %>%
mutate(Y_2 = (1 - D_2) * y_0 + D_2 * y_1)
reg_q2_2 = feols(Y_2 ~ D_2, se = "hetero", data = sim_data_sorted_2)
ate_hat_2 = coef(reg_q2_2)["D_2"]
var_hat_2 = se(reg_q2_2)["D_2"]^2
# if (ate == coef(reg_q2_2)) {
#  print(TRUE)
# } else {
#   print(FALSE)
# }
# if (var == var(var_hat_2) {
#   print(TRUE)
# } else {
#   print(FALSE)
# }
ci_lower_2 = ate_hat_2 - 1.96 * sqrt(var_hat_2)
ci_upper_2 = ate_hat_2 + 1.96 * sqrt(var_hat_2)
indicator_2 = as.numeric(0.2 >= ci_lower_2 & ate <= ci_upper_2)
results[i, ] = c(ate_hat_2, var_hat, indicator_2)
}
results_2 = data.frame(
ATE = numeric(iterations),
Variance = numeric(iterations),
Confidence_Inclusion = integer(iterations)
)
iterations = 800
for (i in 1:iterations) {
random_sort_2 = runif(n)
sim_data_sorted_2 = sim_data %>%
mutate(random_sort_2)
sim_data_sorted_2 = sim_data_sorted_2 %>%
arrange(random_sort_2)
sim_data_sorted_2 = sim_data_sorted_2 %>%
mutate(D_2 = ifelse(row_number() <= 500, 1, 0)) %>%
mutate(Y_2 = (1 - D_2) * y_0 + D_2 * y_1)
reg_q2_2 = feols(Y_2 ~ D_2, se = "hetero", data = sim_data_sorted_2)
ate_hat_2 = coef(reg_q2_2)["D_2"]
var_hat_2 = se(reg_q2_2)["D_2"]^2
# if (ate == coef(reg_q2_2)) {
#  print(TRUE)
# } else {
#   print(FALSE)
# }
# if (var == var(var_hat_2) {
#   print(TRUE)
# } else {
#   print(FALSE)
# }
ci_lower_2 = ate_hat_2 - 1.96 * sqrt(var_hat_2)
ci_upper_2 = ate_hat_2 + 1.96 * sqrt(var_hat_2)
indicator_2 = as.numeric(0.2 >= ci_lower_2 & ate <= ci_upper_2)
results_2[i, ] = c(ate_hat_2, var_hat, indicator_2)
}
View(results_2)
mean_ate_hat_2 = mean(results_2$ATE)
result_ate_2 <- glue("The mean of the estimates is {mean_ate_hat}, the true value is {ate}.")
print(result_ate_2)
var_ate_hat_2 <- var(results_2$ATE)
mean_var_hat_2 <- mean(var_ate_hat_2)
result_var_2 <- glue("The mean of the variace is {mean_var_hat}, the true value is {var}.")
print(result_var_2)
coverage_probability_2 = mean(results_2$Confidence_Inclusion)
print(coverage_probability_2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(haven)
library(sandwich)
library(lmtest)
library(fixest)
library(glue)
setwd("/Users/lionelchambon/Desktop/LIONEL/LIONEL_edu/MASTER/M2/Cours/Econometrics III/Problem Sets/PS2")
tracking_data <- read_dta("tracking.dta")
summary(tracking_data)
head(tracking_data)
school_level_data <- tracking_data %>%
group_by(schoolid) %>%
summarize(
mean_grades = mean(scoreendfirstgrade, na.rm = TRUE),
treated = mean(tracking, na.rm = TRUE),
below_median = mean(bottomhalf, na.rm = TRUE),
n_students = n()
)
head(school_level_data)
reg_q1 <- lm(mean_grades ~ treated, data = school_level_data)
summary(reg_q1)
reg_q1_c <- lm(mean_grades ~ treated + below_median, data = school_level_data)
summary(reg_q1_c)
reg_q1_b <- lm(scoreendfirstgrade ~ tracking, data = tracking_data)
summary(reg_q1)
reg_q1_c_b <- lm(scoreendfirstgrade ~ tracking + bottomhalf, data = tracking_data)
summary(reg_q1_c)
observed_coef <- coef(reg_q1)["treated"]
perm <- 1000
permuted_coef <- numeric(perm)
for (i in 1:perm) {
shuffled <- sample(school_level_data$treated)
permuted_reg <- lm(mean_grades ~ shuffled, data = school_level_data)
permuted_coef[i] <- coef(permuted_reg)["shuffled"]
}
conf_interval <- quantile(permuted_coef, probs = c(0.05, 0.95))
if (observed_coef < conf_interval[1] | observed_coef > conf_interval[2]) {
print("We can reject the null hypothesis")
} else {
print("We fail to reject the null hypothesis.")
}
reg_q1_c_i <- lm(mean_grades ~ treated + below_median + (treated*below_median), data = school_level_data)
summary(reg_q1_c_i)
n=1000
v = rnorm(n, 0,1)
y_0 = rnorm(n, 0,1)
y_1 = 0.5*y_0 + 0.5*v + 0.2
sim_data <- data.frame(y_0 = y_0, y_1 = y_1)
head(sim_data)
sim_data = sim_data %>%
mutate(te = y_1 - y_0)
ate = sim_data %>%
summarise(mean(te))
print(ate)
cor = cor(y_0, y_1)
var = var(sim_data$te)
print(cor)
print(var)
results = data.frame(
ATE = numeric(iterations),
Variance = numeric(iterations),
Confidence_Inclusion = integer(iterations)
)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(haven)
library(sandwich)
library(lmtest)
library(fixest)
library(glue)
setwd("/Users/lionelchambon/Desktop/LIONEL/LIONEL_edu/MASTER/M2/Cours/Econometrics III/Problem Sets/PS2")
tracking_data <- read_dta("tracking.dta")
summary(tracking_data)
head(tracking_data)
school_level_data <- tracking_data %>%
group_by(schoolid) %>%
summarize(
mean_grades = mean(scoreendfirstgrade, na.rm = TRUE),
treated = mean(tracking, na.rm = TRUE),
below_median = mean(bottomhalf, na.rm = TRUE),
n_students = n()
)
head(school_level_data)
reg_q1 <- lm(mean_grades ~ treated, data = school_level_data)
summary(reg_q1)
reg_q1_c <- lm(mean_grades ~ treated + below_median, data = school_level_data)
summary(reg_q1_c)
reg_q1_b <- lm(scoreendfirstgrade ~ tracking, data = tracking_data)
summary(reg_q1)
reg_q1_c_b <- lm(scoreendfirstgrade ~ tracking + bottomhalf, data = tracking_data)
summary(reg_q1_c)
observed_coef <- coef(reg_q1)["treated"]
perm <- 1000
permuted_coef <- numeric(perm)
for (i in 1:perm) {
shuffled <- sample(school_level_data$treated)
permuted_reg <- lm(mean_grades ~ shuffled, data = school_level_data)
permuted_coef[i] <- coef(permuted_reg)["shuffled"]
}
conf_interval <- quantile(permuted_coef, probs = c(0.05, 0.95))
if (observed_coef < conf_interval[1] | observed_coef > conf_interval[2]) {
print("We can reject the null hypothesis")
} else {
print("We fail to reject the null hypothesis.")
}
reg_q1_c_i <- lm(mean_grades ~ treated + below_median + (treated*below_median), data = school_level_data)
summary(reg_q1_c_i)
n=1000
v = rnorm(n, 0,1)
y_0 = rnorm(n, 0,1)
y_1 = 0.5*y_0 + 0.5*v + 0.2
sim_data <- data.frame(y_0 = y_0, y_1 = y_1)
head(sim_data)
sim_data = sim_data %>%
mutate(te = y_1 - y_0)
ate = sim_data %>%
summarise(mean(te))
print(ate)
cor = cor(y_0, y_1)
var = var(sim_data$te)
print(cor)
print(var)
iterations = 800
results = data.frame(
ATE = numeric(iterations),
Variance = numeric(iterations),
Confidence_Inclusion = integer(iterations)
)
for (i in 1:iterations) {
random_sort = runif(n)
sim_data_sorted = sim_data %>%
mutate(random_sort)
sim_data_sorted = sim_data_sorted %>%
arrange(random_sort)
sim_data_sorted = sim_data_sorted %>%
mutate(D = ifelse(row_number() <= 500, 1, 0)) %>%
mutate(Y = (1 - D) * y_0 + D * y_1)
reg_q2 = feols(Y ~ D, se = "hetero", data = sim_data_sorted)
ate_hat = coef(reg_q2)["D"]
var_hat = se(reg_q2)["D"]^2
# if (ate == coef(reg_q2)) {
#  print(TRUE)
# } else {
#   print(FALSE)
# }
# if (var == var_hat) {
#   print(TRUE)
# } else {
#   print(FALSE)
# }
ci_lower = ate_hat - 1.96 * sqrt(var_hat)
ci_upper = ate_hat + 1.96 * sqrt(var_hat)
indicator = as.numeric(ate >= ci_lower & ate <= ci_upper)
results[i, ] = c(ate_hat, var_hat, indicator)
}
mean_ate_hat = mean(results$ATE)
result_ate <- glue("The mean of the estimates is {mean_ate_hat}, the true value is {ate}.")
print(result_ate)
var_ate_hat <- var(results$ATE)
mean_var_hat <- mean(var_ate_hat)
result_var <- glue("The mean of the variace is {mean_var_hat}, the true value is {var}.")
print(result_var)
coverage_probability = mean(results$Confidence_Inclusion)
print(coverage_probability)
iterations = 800
results_2 = data.frame(
ATE = numeric(iterations),
Variance = numeric(iterations),
Confidence_Inclusion = integer(iterations)
)
for (i in 1:iterations) {
random_sort_2 = runif(n)
sim_data_sorted_2 = sim_data %>%
mutate(random_sort_2)
sim_data_sorted_2 = sim_data_sorted_2 %>%
arrange(random_sort_2)
sim_data_sorted_2 = sim_data_sorted_2 %>%
mutate(D_2 = ifelse(row_number() <= 500, 1, 0)) %>%
mutate(Y_2 = (1 - D_2) * y_0 + D_2 * y_1)
reg_q2_2 = feols(Y_2 ~ D_2, se = "hetero", data = sim_data_sorted_2)
ate_hat_2 = coef(reg_q2_2)["D_2"]
var_hat_2 = se(reg_q2_2)["D_2"]^2
# if (ate == coef(reg_q2_2)) {
#  print(TRUE)
# } else {
#   print(FALSE)
# }
# if (var == var(var_hat_2) {
#   print(TRUE)
# } else {
#   print(FALSE)
# }
ci_lower_2 = ate_hat_2 - 1.96 * sqrt(var_hat_2)
ci_upper_2 = ate_hat_2 + 1.96 * sqrt(var_hat_2)
indicator_2 = as.numeric(0.2 >= ci_lower_2 & ate <= ci_upper_2)
results_2[i, ] = c(ate_hat_2, var_hat, indicator_2)
}
mean_ate_hat_2 = mean(results_2$ATE)
result_ate_2 <- glue("The mean of the estimates is {mean_ate_hat}, the true value is {ate}.")
print(result_ate_2)
var_ate_hat_2 <- var(results_2$ATE)
mean_var_hat_2 <- mean(var_ate_hat_2)
result_var_2 <- glue("The mean of the variace is {mean_var_hat}, the true value is {var}.")
print(result_var_2)
coverage_probability_2 = mean(results_2$Confidence_Inclusion)
print(coverage_probability_2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(haven)
library(sandwich)
library(lmtest)
library(fixest)
library(glue)
setwd("/Users/lionelchambon/Desktop/LIONEL/LIONEL_edu/MASTER/M2/Cours/Econometrics III/Problem Sets/PS2")
tracking_data <- read_dta("tracking.dta")
summary(tracking_data)
head(tracking_data)
school_level_data <- tracking_data %>%
group_by(schoolid) %>%
summarize(
mean_grades = mean(scoreendfirstgrade, na.rm = TRUE),
treated = mean(tracking, na.rm = TRUE),
below_median = mean(bottomhalf, na.rm = TRUE),
n_students = n()
)
head(school_level_data)
reg_q1 <- lm(mean_grades ~ treated, data = school_level_data)
summary(reg_q1)
reg_q1_c <- lm(mean_grades ~ treated + below_median, data = school_level_data)
summary(reg_q1_c)
reg_q1_b <- lm(scoreendfirstgrade ~ tracking, data = tracking_data)
summary(reg_q1)
reg_q1_c_b <- lm(scoreendfirstgrade ~ tracking + bottomhalf, data = tracking_data)
summary(reg_q1_c)
observed_coef <- coef(reg_q1)["treated"]
perm <- 1000
permuted_coef <- numeric(perm)
for (i in 1:perm) {
shuffled <- sample(school_level_data$treated)
permuted_reg <- lm(mean_grades ~ shuffled, data = school_level_data)
permuted_coef[i] <- coef(permuted_reg)["shuffled"]
}
conf_interval <- quantile(permuted_coef, probs = c(0.05, 0.95))
if (observed_coef < conf_interval[1] | observed_coef > conf_interval[2]) {
print("We can reject the null hypothesis")
} else {
print("We fail to reject the null hypothesis.")
}
reg_q1_c_i <- lm(mean_grades ~ treated + below_median + (treated*below_median), data = school_level_data)
summary(reg_q1_c_i)
n=1000
v = rnorm(n, 0,1)
y_0 = rnorm(n, 0,1)
y_1 = 0.5*y_0 + 0.5*v + 0.2
sim_data <- data.frame(y_0 = y_0, y_1 = y_1)
head(sim_data)
sim_data = sim_data %>%
mutate(te = y_1 - y_0)
ate = sim_data %>%
summarise(mean(te))
print(ate)
cor = cor(y_0, y_1)
var = var(sim_data$te)
print(cor)
print(var)
iterations = 800
results = data.frame(
ATE = numeric(iterations),
Variance = numeric(iterations),
Confidence_Inclusion = integer(iterations)
)
for (i in 1:iterations) {
random_sort = runif(n)
sim_data_sorted = sim_data %>%
mutate(random_sort)
sim_data_sorted = sim_data_sorted %>%
arrange(random_sort)
sim_data_sorted = sim_data_sorted %>%
mutate(D = ifelse(row_number() <= 500, 1, 0)) %>%
mutate(Y = (1 - D) * y_0 + D * y_1)
reg_q2 = feols(Y ~ D, se = "hetero", data = sim_data_sorted)
ate_hat = coef(reg_q2)["D"]
var_hat = se(reg_q2)["D"]^2
# if (ate == coef(reg_q2)) {
#  print(TRUE)
# } else {
#   print(FALSE)
# }
# if (var == var_hat) {
#   print(TRUE)
# } else {
#   print(FALSE)
# }
ci_lower = ate_hat - 1.96 * sqrt(var_hat)
ci_upper = ate_hat + 1.96 * sqrt(var_hat)
indicator = as.numeric(ate >= ci_lower & ate <= ci_upper)
results[i, ] = c(ate_hat, var_hat, indicator)
}
mean_ate_hat = mean(results$ATE)
result_ate <- glue("The mean of the estimates is {mean_ate_hat}, the true value is {ate}.")
print(result_ate)
var_ate_hat <- var(results$ATE)
mean_var_hat <- mean(var_ate_hat)
result_var <- glue("The mean of the variace is {mean_var_hat}, the true value is {var}.")
print(result_var)
coverage_probability = mean(results$Confidence_Inclusion)
print(coverage_probability)
iterations = 800
results_2 = data.frame(
ATE = numeric(iterations),
Variance = numeric(iterations),
Confidence_Inclusion = integer(iterations)
)
for (i in 1:iterations) {
random_sort_2 = runif(n)
sim_data_sorted_2 = sim_data %>%
mutate(random_sort_2)
sim_data_sorted_2 = sim_data_sorted_2 %>%
arrange(random_sort_2)
sim_data_sorted_2 = sim_data_sorted_2 %>%
mutate(D_2 = ifelse(row_number() <= 500, 1, 0)) %>%
mutate(Y_2 = (1 - D_2) * y_0 + D_2 * y_1)
reg_q2_2 = feols(Y_2 ~ D_2, se = "hetero", data = sim_data_sorted_2)
ate_hat_2 = coef(reg_q2_2)["D_2"]
var_hat_2 = se(reg_q2_2)["D_2"]^2
# if (ate == coef(reg_q2_2)) {
#  print(TRUE)
# } else {
#   print(FALSE)
# }
# if (var == var(var_hat_2) {
#   print(TRUE)
# } else {
#   print(FALSE)
# }
ci_lower_2 = ate_hat_2 - 1.96 * sqrt(var_hat_2)
ci_upper_2 = ate_hat_2 + 1.96 * sqrt(var_hat_2)
indicator_2 = as.numeric(0.2 >= ci_lower_2 & ate <= ci_upper_2)
results_2[i, ] = c(ate_hat_2, var_hat, indicator_2)
}
View(school_level_data)
View(school_level_data)
mean_ate_hat_2 = mean(results_2$ATE)
result_ate_2 <- glue("The mean of the estimates is {mean_ate_hat}, the true value is {ate}.")
print(result_ate_2)
var_ate_hat_2 <- var(results_2$ATE)
mean_var_hat_2 <- mean(var_ate_hat_2)
result_var_2 <- glue("The mean of the variace is {mean_var_hat}, the true value is {var}.")
print(result_var_2)
coverage_probability_2 = mean(results_2$Confidence_Inclusion)
print(coverage_probability_2)
?factor
reg_q1_c_i <- lm(mean_grades ~ treated + (treated*below_median), data = school_level_data)
summary(reg_q1_c_i)
View(results)
mean_ate_hat = mean(results$ATE)
result_ate <- glue("The mean of the estimates is {mean_ate_hat}, the true value is {ate}.")
print(result_ate)
var_ate_hat <- var(results$ATE)
mean_var_hat <- mean(var_ate_hat)
result_var <- glue("The mean of the variace is {mean_var_hat}, the true value is {var}.")
print(result_var)
coverage_probability = mean(results$Confidence_Inclusion)
print(coverage_probability)
iterations = 800
results_2 = data.frame(
ATE = numeric(iterations),
Variance = numeric(iterations),
Confidence_Inclusion = integer(iterations)
)
for (i in 1:iterations) {
random_sort_2 = runif(n)
sim_data_sorted_2 = sim_data %>%
mutate(random_sort_2)
sim_data_sorted_2 = sim_data_sorted_2 %>%
arrange(random_sort_2)
sim_data_sorted_2 = sim_data_sorted_2 %>%
mutate(D_2 = ifelse(row_number() <= 500, 1, 0)) %>%
mutate(Y_2 = (1 - D_2) * y_0 + D_2 * y_1)
reg_q2_2 = feols(Y_2 ~ D_2, se = "hetero", data = sim_data_sorted_2)
ate_hat_2 = coef(reg_q2_2)["D_2"]
var_hat_2 = se(reg_q2_2)["D_2"]^2
# if (ate == coef(reg_q2_2)) {
#  print(TRUE)
# } else {
#   print(FALSE)
# }
# if (var == var(var_hat_2) {
#   print(TRUE)
# } else {
#   print(FALSE)
# }
ci_lower_2 = ate_hat_2 - 1.96 * sqrt(var_hat_2)
ci_upper_2 = ate_hat_2 + 1.96 * sqrt(var_hat_2)
indicator_2 = as.numeric(0.2 >= ci_lower_2 & ate <= ci_upper_2)
results_2[i, ] = c(ate_hat_2, var_hat, indicator_2)
}
mean_ate_hat_2 = mean(results_2$ATE)
result_ate_2 <- glue("The mean of the estimates is {mean_ate_hat}, the true value is {ate}.")
print(result_ate_2)
var_ate_hat_2 <- var(results_2$ATE)
mean_var_hat_2 <- mean(var_ate_hat_2)
result_var_2 <- glue("The mean of the variace is {mean_var_hat}, the true value is {var}.")
print(result_var_2)
coverage_probability_2 = mean(results_2$Confidence_Inclusion)
print(coverage_probability_2)
